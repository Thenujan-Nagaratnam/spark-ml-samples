buildscript {
    ext {
        springBootVersion = '2.7.18' // Compatible with Java 8
        springFrameworkVersion = '5.3.36' // Compatible with Java 8
        sparkJaninoVersion = '3.1.9' // Example, adjust to your Spark version
        sparkJacksonVersion = '2.12.7' // Example, align with Spark
        slf4jVersion = '1.7.36' // Compatible with Java 8
        logbackVersion = '1.2.11' // Compatible with Java 8
        junitVersion = '4.13.2' // Compatible with Java 8
    }
    repositories {
        jcenter()
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management' // Ensures consistent dependency versions

configurations.all {
    resolutionStrategy {
        force "org.codehaus.janino:janino:$sparkJaninoVersion"
        force "org.codehaus.janino:commons-compiler:$sparkJaninoVersion"
        force "com.fasterxml.jackson.core:jackson-core:$sparkJacksonVersion"
        force "com.fasterxml.jackson.core:jackson-databind:$sparkJacksonVersion"
    }
}

dependencies {
    compile project(':spark-driver')

    // Spring Boot web starter (excludes Tomcat and logging as per your config)
    compile("org.springframework.boot:spring-boot-starter-web:${springBootVersion}") {
        exclude module: 'spring-boot-starter-tomcat'
        exclude module: 'spring-boot-starter-logging'
    }

    // Thymeleaf starter for rendering templates
    compile("org.springframework.boot:spring-boot-starter-thymeleaf:${springBootVersion}")

    // Jetty and actuator starters
    compile("org.springframework.boot:spring-boot-starter-jetty:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-actuator:${springBootVersion}")

    // Logging dependencies
    compile("org.slf4j:slf4j-api:${slf4jVersion}")
    compile("ch.qos.logback:logback-classic:${logbackVersion}")

    // Test dependencies
    testCompile("junit:junit:${junitVersion}")
    testCompile("org.springframework:spring-test:${springFrameworkVersion}")
}